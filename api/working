from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

def create_app():
    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://booking_test:3ID2h:44@localhost/booking_db'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

    db.init_app(app)

    # Import and register blueprints here if you have multiple modules

    return app

app = create_app()

@app.route('/api/booking', methods=['POST'])
def create_booking():
    from models.booking import Booking
    from models.visitor import Visitor
    from models.facility import Facility
    from models.inmate import Inmate

    data = request.get_json()
    required_params = ['inmate_id', 'visitor_id', 'date', 'timeslot', 'facility_id', 'name', 'email']
    
    if not all(param in data for param in required_params):
        return jsonify({'error': 'Missing required parameters'}), 400

    try:
        new_visitor = Visitor(
            visitor_id=data['visitor_id'],
            email=data['email'],
            name=data['name'],
            facility_id=data['facility_id']
        )
        db.session.add(new_visitor)
        db.session.commit()

        new_booking = Booking(
            booking_id=12334556,
            inmate_id=data['inmate_id'],
            visitor_id=data['visitor_id'],
            date=data['date'],
            timeslot=data['timeslot'],
            status='Pending'
        )
        db.session.add(new_booking)
        db.session.commit()

        return jsonify({'message': 'Booking created successfully'}), 201
    except Exception as e:
        db.session.rollback()
        return jsonify({"error": f'Error creating booking: {str(e)}'}), 500

@app.route('/api/facilities')
def get_facility():
    from models.facility import Facility
    facility_ids = [row[0] for row in db.session.query(Facility.facility_id).all()]
    return jsonify(facility_ids)

@app.route('/api/all_bookings')
def get_all_bookings():
    from models.booking import Booking
    bookings = db.session.query(Booking).all()
    print(bookings)
    return jsonify("{'msg': 'test'}")

if __name__ == '__main__':
    app.run(debug=True, host="0.0.0.0", port=5001)
